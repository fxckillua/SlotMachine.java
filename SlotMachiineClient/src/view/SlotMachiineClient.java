package view;

import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import service.ISlotMachineService;
import javax.rmi.ssl.SslRMIClientSocketFactory;
import java.util.UUID;


public class SlotMachiineClient extends javax.swing.JFrame {
    
    private ISlotMachineService service;
    private String clientId = "Cliente1";

    public SlotMachiineClient() {
        initComponents();
        
        clientId = UUID.randomUUID().toString();
        
        try {
            Registry registry = LocateRegistry.getRegistry(ISlotMachineService.HOST, ISlotMachineService.PORTA, new SslRMIClientSocketFactory());
            service = (ISlotMachineService) registry.lookup(ISlotMachineService.NOME);
            
            if (service.connectClient(clientId)) {
                txtSaldo.setText("Saldo: " + service.getBalance(clientId));
                txtResultado.setText("Bem-vindo! Faça sua aposta.");
            } else {
                txtResultado.setText("Erro ao conectar com o servidor.");
            }
        } catch (Exception e) {
            txtResultado.setText("Erro ao conectar: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtAposta = new javax.swing.JTextField();
        btnApostar = new javax.swing.JButton();
        txtSaldo = new javax.swing.JTextField();
        btnVerSaldo = new javax.swing.JButton();
        txtResultado = new javax.swing.JTextField();
        btnHistorico = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        txtHistorico = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtAposta.setText("Digite o valor da aposta");
        txtAposta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApostaActionPerformed(evt);
            }
        });

        btnApostar.setText("Apostar");
        btnApostar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApostarActionPerformed(evt);
            }
        });

        txtSaldo.setEditable(false);

        btnVerSaldo.setText("Ver Saldo");
        btnVerSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerSaldoActionPerformed(evt);
            }
        });

        txtResultado.setEditable(false);

        btnHistorico.setText("Mostrar Histórico");
        btnHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoricoActionPerformed(evt);
            }
        });

        txtHistorico.setEditable(false);
        txtHistorico.setColumns(20);
        txtHistorico.setRows(5);
        jScrollPane.setViewportView(txtHistorico);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnVerSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnHistorico, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtAposta, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApostar, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                    .addComponent(txtResultado))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtResultado)
                    .addComponent(jScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAposta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnApostar))
                .addGap(18, 18, 18)
                .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVerSaldo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtApostaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApostaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApostaActionPerformed

    private void btnApostarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApostarActionPerformed
        try {
        double valorAposta = Double.parseDouble(txtAposta.getText());
        if (service.placeBet(clientId, valorAposta)) {
            txtResultado.setText(service.getLastPlayResult(clientId));
            txtSaldo.setText("Saldo: " + service.getBalance(clientId));
        } else {
            txtResultado.setText("Saldo insuficiente!");
        }
    } catch (Exception e) {
        txtResultado.setText("Erro: " + e.getMessage());
    }
    }//GEN-LAST:event_btnApostarActionPerformed

    private void btnVerSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerSaldoActionPerformed
        try {
        txtSaldo.setText("Saldo: " + service.getBalance(clientId));
    } catch (Exception e) {
        txtResultado.setText("Erro ao obter saldo: " + e.getMessage());
    }
    }//GEN-LAST:event_btnVerSaldoActionPerformed

    private void btnHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoricoActionPerformed
        try {
        java.util.List<String> historico = service.getLastTenPlays(clientId);
        txtHistorico.setText(String.join("\n", historico));
    } catch (Exception e) {
        txtResultado.setText("Erro ao obter histórico: " + e.getMessage());
    }
    }//GEN-LAST:event_btnHistoricoActionPerformed

    public static void main(String args[]) {
        
        System.setProperty("javax.net.ssl.trustStore", "truststore.jks");
        System.setProperty("javax.net.ssl.trustStorePassword", "senha123");

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SlotMachiineClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApostar;
    private javax.swing.JButton btnHistorico;
    private javax.swing.JButton btnVerSaldo;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTextField txtAposta;
    private javax.swing.JTextArea txtHistorico;
    private javax.swing.JTextField txtResultado;
    private javax.swing.JTextField txtSaldo;
    // End of variables declaration//GEN-END:variables
}
